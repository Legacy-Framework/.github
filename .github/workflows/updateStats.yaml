name: Update Organization Statistics

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    paths:
      - 'updateStats.yaml'

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install @octokit/rest

    - name: Fetch and update statistics
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        node <<EOF
        const { Octokit } = require("@octokit/rest");
        const fs = require('fs');

        const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
        const org = 'YOUR_ORG_NAME';

        async function getRepoStats(repo) {
          const { data: repoData } = await octokit.repos.get({ owner: org, repo });
          const { data: contributors } = await octokit.repos.listContributors({ owner: org, repo });

          return {
            name: repoData.name,
            stars: repoData.stargazers_count,
            watchers: repoData.watchers_count,
            forks: repoData.forks_count,
            commits: repoData.pushed_at,
            contributors: contributors.length
          };
        }

        async function main() {
          const { data: repos } = await octokit.repos.listForOrg({ org, per_page: 100 });
          const stats = await Promise.all(repos.map(repo => getRepoStats(repo.name)));

          let readme = fs.readFileSync('README.md', 'utf8');
          const startMarker = '<!-- STATS_START -->';
          const endMarker = '<!-- STATS_END -->';

          const startIdx = readme.indexOf(startMarker) + startMarker.length;
          const endIdx = readme.indexOf(endMarker);

          const newStats = stats.map(stat => `
          - **${stat.name}**
            - Stars: ${stat.stars}
            - Watchers: ${stat.watchers}
            - Forks: ${stat.forks}
            - Last Commit: ${stat.commits}
            - Contributors: ${stat.contributors}
          `).join('\n');

          readme = `${readme.substring(0, startIdx)}\n${newStats}\n${readme.substring(endIdx)}`;
          fs.writeFileSync('README.md', readme);
        }

        main().catch(error => {
          console.error(error);
          process.exit(1);
        });
        EOF

    - name: Commit changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add README.md
        git commit -m 'Update statistics in README'
        git push
